[package]
name = "aegis_crypto_core"
version = "0.1.0"
authors = ["Justin Hutzler <justin@synergy-network.io>"]
edition = "2021"
description = "Aegis: Unified WebAssembly, Rust, and Python PQ cryptography core with Kyber, Dilithium, Falcon, HQC, SPHINCS+ support. Classic McEliece is experimental and disabled by default."
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/synergy-network-hq/aegis"
homepage = "https://synergy-network.io"
documentation = "https://docs.rs/aegis_crypto_core"
keywords = ["post-quantum", "cryptography", "wasm", "rust"]
categories = ["cryptography", "wasm", "no-std"]
publish = true

[lib]
name = "aegis_crypto_core"
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]

# [[bin]]
# name = "test_core_functionality"
# path = "test_core_functionality.rs"

[[bin]]
name = "blockchain_wallet"
path = "src/bin/blockchain_wallet.rs"

[[bin]]
name = "digital_identity"
path = "src/bin/digital_identity.rs"

[[bin]]
name = "document_signing"
path = "src/bin/document_signing.rs"

[[bin]]
name = "financial_security"
path = "src/bin/financial_security.rs"

[[bin]]
name = "iot_security"
path = "src/bin/iot_security.rs"

[[bin]]
name = "secure_messaging"
path = "src/bin/secure_messaging.rs"

[[bin]]
name = "web_api_server"
path = "src/bin/web_api_server.rs"

[dependencies]
wasm-bindgen = { version = "0.2", optional = true }
js-sys = { version = "0.3.61", optional = true }
zerocopy = "0.8.26"
pyo3 = { version = "0.24", optional = true, features = ["extension-module"] }
pqcrypto-mlkem = { path = "../pqcrypto/pqcrypto-mlkem", optional = true }
pqcrypto-mldsa = { path = "../pqcrypto/pqcrypto-mldsa", optional = true }
pqcrypto-sphincsplus = { path = "../pqcrypto/pqcrypto-sphincsplus", optional = true }
pqcrypto-falcon = { path = "../pqcrypto/pqcrypto-falcon", optional = true }
pqcrypto-hqc = { path = "../pqcrypto/pqcrypto-hqc", optional = true }
pqcrypto-classicmceliece = { path = "../pqcrypto/pqcrypto-classicmceliece", optional = true }
pqcrypto-traits = { path = "../pqcrypto/pqcrypto-traits", optional = true }
# Pure Rust implementations from rustpqc folder (archived - WASM files only)
# ml-kem = { path = "../rustpqc/ml-kem", optional = true }
# ml-dsa = { path = "../rustpqc/ml-dsa", optional = true }
sha3 = "0.10"
blake3 = "1.5"
subtle = "2.5"
zeroize = "1.8"
getrandom = { version = "0.3", features = ["std"] }
rand = { version = "0.8", default-features = false, features = [
  "std",
  "rand_chacha",
] }
hex = "0.4"
base64 = "0.22.1"
# WASM and web dependencies
web-sys = { version = "0.3", optional = true, features = [
  "Request",
  "RequestInit",
  "RequestMode",
  "Response",
  "Window",
] }
wasm-bindgen-futures = { version = "0.4", optional = true }

# Server dependencies (not for WASM)
axum = { version = "0.7", optional = true }
tokio = { version = "1.0", optional = true, features = ["full"] }
tower-http = { version = "0.5", optional = true, features = ["cors"] }
serde = { version = "1.0", optional = true, features = ["derive"] }
serde_json = { version = "1.0", optional = true }

[dev-dependencies]
aegis_crypto_core = { path = "." }
criterion = "0.7.0"
wasm-bindgen-test = "0.3"

[build-dependencies]
cc = "1.0"


[features]
default = [
  "kyber",
  "dilithium",
  "falcon",
  "sphincsplus",
  "hqc",
]
std = []
wasm = ["dep:wasm-bindgen", "dep:js-sys"]
js-bindings = ["dep:wasm-bindgen", "dep:js-sys"]
python-bindings = ["dep:pyo3"]
kyber = ["dep:pqcrypto-mlkem", "dep:pqcrypto-traits"]
dilithium = ["dep:pqcrypto-mldsa", "dep:pqcrypto-traits"]
falcon = ["dep:pqcrypto-falcon", "dep:pqcrypto-traits"]
sphincsplus = ["dep:pqcrypto-sphincsplus", "dep:pqcrypto-traits"]
hqc = ["dep:pqcrypto-hqc", "dep:pqcrypto-traits"]
classicmceliece = ["dep:pqcrypto-classicmceliece", "dep:pqcrypto-traits"]
# Pure Rust implementations (archived - WASM files only)
# rustpqc-kyber = ["dep:ml-kem"]
# rustpqc-dilithium = ["dep:ml-dsa"]
# NIST Reference WASM implementations
nist-wasm = ["dep:web-sys", "dep:wasm-bindgen-futures"]
# WASM-only build (excludes all PQC crates with C dependencies)
wasm-only = ["nist-wasm", "wasm"]
# WASM-compatible build (includes PQC algorithms but excludes server dependencies)
wasm-compatible = ["kyber", "dilithium", "falcon", "sphincsplus", "hqc", "wasm", "nist-wasm"]
# Server features
server = [
  "dep:axum",
  "dep:tokio",
  "dep:tower-http",
  "dep:serde",
  "dep:serde_json",
]


[badges]
github-actions = { repository = "synergy-network-hq/aegis", workflow = "CI" }

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[package.metadata.release]
no-dev-version = true
